#!bin/bash

#script will fail and exit if any command fails
set -o errexit

# script will fail and exit when a pipe comamnd fails
set -o pipefail

#exit when uninitialised variable is used
set -o nounset

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi 

export DATABASE_URL="postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_PORT}:${POSTGRES_HOST}:{POSTGRES_PORT}/${POSTGRES_DB}"

python << END 
import sys 
import time
import psycopg2
suggest_unrecoverable_after = 30 
start = time.time()
while True: 
    try:
        psycopg2.connect(
            dbname="${POSTGRES_DB}",
            user="${POSTGRES_USER}",
            password="${POSTGRES_PASSWORD}",
            host="${POSTGRES_HOST}",
            port="${POSTGRES_PORT}",
        )
        break
    except psycopg2.OperationalError as error:
        sys.stderr.write("Waiting for POstgreSQL to become avaiable..\n")
        if time.time() - start > suggest_unrecoverable_after:
            sys.stderr.write("This is taking longer than expected. The following exception may be indicative of an unrecoverable error: '{}'\n".format(error))
    time.sleep(3)

END

>&2 echo "POSTGRESQL is available"
 
 exec "$@"
